#
#

CC = gcc
CXX = g++ # g++ #mpicxx
NVCC = nvcc

CPPFLAGS = -g -fPIC # -fPIC is needed to build shared library
CPPFLAGS += -I./src

CFLAGS = -g
CXXFLAGS = -g  # -DARMA_USE_LAPACK -UARMA_USE_BLAS
#NVCCFLAGS = -g -arch sm_50 ## here use "nvcc -h" to find an allowed or supported value in --gpu-architecture.
CXXFLAGS += -fopenmp


#LDFLAGS = -lcppunit -ldl -lcudart -lcufft -lmpi
LDFLAGS = -larmadillo -llapack -lblas
LDFLAGS += -fopenmp

src = $(wildcard ./src/askit/base/*.cpp ./src/askit/parser/*.cpp ./src/askit/*.cpp ./src/askit/abinit/*.cpp ./src/askit/cp2k/*.cpp ./src/askit/qe/*.cpp ./src/askit/cube_handle/*.cpp)
#src = $(wildcard ./src/**/*.cpp)
#src = $(shell find ./src -name *.cpp)
obj = $(patsubst %.cpp, %.o, $(src))

#src_cu = $(wildcard ./*.cu ../src/*.cu)
#obj_cu = $(patsubst %.cu, %.cu.o, $(src_cu))

libatomscikit: $(obj)
	ar crv libatomscikit.a $(obj) #$(LDFLAGS)
	$(CXX) -shared -fPIC -o libatomscikit.so ${obj} $(LDFLAGS)

%.o: %.cpp
	$(CXX) -c $(CPPFLAGS) $(CXXFLAGS) $< -o $@


%.cu.o: %.cu
	$(NVCC) -c $(CPPFLAGS) $(CXXFLAGS) $< -o $@

install: libatomscikit
	rm -rf ${HOME}/.local/atomscikit
	mkdir -p ${HOME}/.local/atomscikit/include
	mkdir -p ${HOME}/.local/atomscikit/lib
	cp -r include/* ${HOME}/.local/atomscikit/include/
	cp libatomscikit.a ${HOME}/.local/atomscikit/lib/
	cp libatomscikit.so ${HOME}/.local/atomscikit/lib/

uninstall:
	rm -rf ${HOME}/.local/atomscikit

.PHONY: clean

clean:
	rm -rf $(obj) *.a *.so

